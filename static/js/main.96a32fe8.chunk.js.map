{"version":3,"sources":["index.js"],"names":["App","useState","power","setPower","bank","setBank","curr","setCurr","id","className","DrumMachine","handlePower","e","target","checked","handleBank","handleDisplay","desc","props","Display","DrumPads","CtrlPad","ToggleSwitch","name","handleChange","checky","tTxt","fTxt","type","disabled","dis","defaultChecked","onChange","htmlFor","datacustattrt","datacustattrf","sound","setSound","url","useEffect","a","fetch","response","json","data","soundBite","fetchData","catch","console","log","jsx","map","items","DrumPad","idKey","url1","url2","desc1","desc2","renderPad","act","setAct","document","addEventListener","handleKey","removeEventListener","keyCode","handleEvent","playSound","getElementById","dur","Math","round","duration","currentTime","play","Promise","resolve","setTimeout","onClick","src","style","animation","ReactDOM","render"],"mappings":"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","file":"static/js/main.96a32fe8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nconst App=()=>{\n  //app on/off\n  const [power, setPower]=useState(true);\n  //app audio bank: true = 1, false = 2\n  const [bank,setBank]=useState(true);\n  //display text\n  const [curr, setCurr]=useState('');\n  const powerSwitch=e=>{\n    setPower(e.target.checked);\n    setCurr('');\n  }\n\n  const bankSwitch=e=>{\n    setBank(e.target.checked);\n    setCurr('');\n  }\n\n  const handleDisplay=desc=>{\n    setCurr(desc);\n  }\n  return (\n    <div id=\"app\" className={bank?'app-bank1':'app-bank2'}>\n      <DrumMachine \n        handlePower={powerSwitch} \n        handleBank={bankSwitch}\n        handleDisplay={handleDisplay}\n        power={power}\n        bank={bank}\n        curr={curr}/>\n    </div>\n  )\n}\n\nconst DrumMachine=props=>{\n\n\n\n\n  return (\n    <div id=\"drum-machine\">\n      <Display curr={props.curr}/>\n      <DrumPads handleDisplay={props.handleDisplay} power={props.power} bank={props.bank}/>\n      <CtrlPad handlePower={props.handlePower} handleBank={props.handleBank} power={props.power} bank={props.bank}/>\n    </div>\n  )\n}\n\nconst CtrlPad=props=>{\n  return (\n    <div id=\"ctrl-pad\">\n      <ToggleSwitch name=\"powerTog\"\n                    id=\"powerSwit\"\n                    handleChange={props.handlePower}\n                    checky={props.power}\n                    tTxt='ON'\n                    fTxt='OFF' />\n      <ToggleSwitch name=\"bankTog\"\n                    id=\"bankSwit\"\n                    handleChange={props.handleBank}\n                    checky={props.bank}\n                    tTxt='&nbsp;&nbsp;1'\n                    fTxt='2&nbsp;&nbsp;&nbsp;' />              \n    </div>\n    \n\n  )\n}\nconst ToggleSwitch =props=>{\n  return (\n  <div className='tog'>\n    <input \n      type=\"checkbox\"\n      className='tog-check'\n      name={props.name}\n      id={props.id}\n      disabled={props.dis}\n      defaultChecked={props.checky}\n      onChange={props.handleChange}\n    />\n    <label\n      className='tog-label'\n      htmlFor={props.id}>\n      <span className=\"tog-inner\"\n            datacustattrt={props.tTxt}\n            datacustattrf={props.fTxt}/>\n      <span className=\"tog-switch\" />\n    </label>\n  </div>\n  )\n}\n\nconst Display=props=>{\n  return (\n    <p id=\"display\">\n      {props.curr}\n    </p>\n  )\n}\n\nconst DrumPads=props=>{\n  //array of audio url and their descriptions\n  const [sound, setSound]=useState([]);\n  const [url]=useState('https://raw.githubusercontent.com/MatchaCrisp/DrumMachine/main/src/data/soundBite.json');\n\n\n  const renderPad=items=><DrumPad \n                            key ={items.idKey}\n                            idKey={items.idKey}\n                            id={items.id}\n                            url={props.bank?items.url1:items.url2}\n                            desc={props.bank?items.desc1:items.desc2} \n                            power={props.power} \n                            handleDisplay={props.handleDisplay}/>;\n  \n  //retrieve data on mount                          \n  useEffect(()=>{\n    if (!url) return;\n\n    const fetchData=async ()=>{\n      const response=await fetch(url);\n      const data=await response.json();\n      setSound(data.soundBite);\n      \n    }\n    fetchData().catch(console.log);\n\n  },[url]);\n\n  const jsx=sound.map(items=>renderPad(items));\n\n\n\n\n  return (\n    <div id=\"drum-pads\" className={props.bank?'app-pads1':'app-pads2'}>\n      {jsx}\n    </div>\n  )\n}\n\nconst DrumPad=props=>{\n  //active state: 0=inactive, any int=duration of clip in ms\n  const [act, setAct]=useState(0);\n\n  //add keydown listener on mount, remove on unmount\n  useEffect(()=>{\n    document.addEventListener('keydown',handleKey);\n    return ()=>{document.removeEventListener('keydown',handleKey)};\n  });\n\n  const handleKey=e=>{\n    if (!props.power) return;\n    if (e.keyCode===props.idKey) {\n      handleEvent();\n    }\n  }\n  const handleClick=()=>{\n    if (!props.power) return;\n    handleEvent();\n  }\n  const handleEvent=()=>{\n    //play sound and change display\n    props.handleDisplay(props.desc);\n    playSound();\n  }\n\n  //active effect achieved through async settimeout\n  const playSound=async()=>{\n    const sound=document.getElementById(props.id);\n    const dur=Math.round(sound.duration*1000);\n    sound.currentTime=0;\n    setAct(dur);\n    sound.play();\n    await new Promise(resolve=>setTimeout(resolve,dur));\n    setAct(0);\n\n\n  };\n\n    return (\n      <div className='drum-pad'\n           id={`${props.id}butt`} \n           onClick={handleClick}\n           >\n        <p className=\"pad-id\">{props.id}</p>\n        <audio className=\"clip\" id={props.id} src={props.url} />\n        <div className=\"animHelper\"\n             style={{animation:act?`activated ${act}ms`:'none'}} />\n      </div>\n    )\n}\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}