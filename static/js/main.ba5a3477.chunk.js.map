{"version":3,"sources":["components/Display.js","components/DrumPad.js","components/DrumPads.js","components/ToggleSwitch.js","components/CtrlPad.js","components/DrumMachine.js","App.js","index.js"],"names":["Display","props","id","curr","DrumPad","useState","act","setAct","useEffect","document","addEventListener","handleKey","removeEventListener","e","power","keyCode","idKey","handleEvent","handleDisplay","desc","playSound","a","sound","getElementById","dur","Math","round","duration","currentTime","play","Promise","resolve","setTimeout","className","onClick","src","url","style","animation","DrumPads","setSound","fetch","response","json","data","soundBite","fetchData","catch","console","log","jsx","map","items","bank","url1","url2","desc1","desc2","renderPad","ToggleSwitch","type","name","disabled","dis","defaultChecked","checky","onChange","handleChange","htmlFor","datacustattrt","tTxt","datacustattrf","fTxt","CtrlPad","handlePower","handleBank","DrumMachine","App","setPower","setBank","setCurr","target","checked","ReactDOM","render"],"mappings":"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","file":"static/js/main.ba5a3477.chunk.js","sourcesContent":["\r\n\r\n// displays currently playing sound\r\nconst Display=props=>{\r\n    return (\r\n      <p id=\"display\">\r\n        {props.curr}\r\n      </p>\r\n    )\r\n  }\r\n  \r\nexport default Display;","// external\r\n// react\r\nimport {useState, useEffect} from 'react';\r\n\r\n// renders button that onclick plays a sound\r\nconst DrumPad=props=>{\r\n    //active state: 0=inactive, any int=duration of clip in ms\r\n    const [act, setAct]=useState(0);\r\n  \r\n    //add keydown listener on mount, remove on unmount\r\n    useEffect(()=>{\r\n      document.addEventListener('keydown',handleKey);\r\n      return ()=>{document.removeEventListener('keydown',handleKey)};\r\n    });\r\n  \r\n    const handleKey=e=>{\r\n      if (!props.power) return;\r\n      if (e.keyCode===props.idKey) {\r\n        handleEvent();\r\n      }\r\n    }\r\n    const handleClick=()=>{\r\n      if (!props.power) return;\r\n      handleEvent();\r\n    }\r\n    const handleEvent=()=>{\r\n      //play sound and change display\r\n      props.handleDisplay(props.desc);\r\n      playSound();\r\n    }\r\n  \r\n    //active effect achieved through async settimeout\r\n    const playSound=async()=>{\r\n      const sound=document.getElementById(props.id);\r\n      const dur=Math.round(sound.duration*1000);\r\n      sound.currentTime=0;\r\n      setAct(dur);\r\n      sound.play();\r\n      await new Promise(resolve=>setTimeout(resolve,dur));\r\n      setAct(0);\r\n  \r\n  \r\n    };\r\n  \r\n      return (\r\n        <div className='drum-pad'\r\n             id={`${props.id}butt`} \r\n             onClick={handleClick}\r\n             >\r\n          <p className=\"pad-id\">{props.id}</p>\r\n          <audio className=\"clip\" id={props.id} src={props.url} />\r\n          <div className=\"animHelper\"\r\n               style={{animation:act?`activated ${act}ms`:'none'}} />\r\n        </div>\r\n      )\r\n  }\r\n\r\n  export default DrumPad;","// external\r\n// react\r\nimport {useState, useEffect} from 'react';\r\n\r\n// internal\r\n// components\r\nimport DrumPad from './DrumPad';\r\n\r\n// renders a 3x3 grid of DrumPad\r\nconst DrumPads=props=>{\r\n    //array of audio url and their descriptions\r\n    const [sound, setSound]=useState([]);\r\n    const [url]=useState('https://raw.githubusercontent.com/MatchaCrisp/DrumMachine/main/src/data/soundBite.json');\r\n  \r\n  \r\n    const renderPad=items=><DrumPad \r\n                              key ={items.idKey}\r\n                              idKey={items.idKey}\r\n                              id={items.id}\r\n                              url={props.bank?items.url1:items.url2}\r\n                              desc={props.bank?items.desc1:items.desc2} \r\n                              power={props.power} \r\n                              handleDisplay={props.handleDisplay}/>;\r\n    \r\n    //retrieve data on mount                          \r\n    useEffect(()=>{\r\n      if (!url) return;\r\n  \r\n      const fetchData=async ()=>{\r\n        const response=await fetch(url);\r\n        const data=await response.json();\r\n        setSound(data.soundBite);\r\n        \r\n      }\r\n      fetchData().catch(console.log);\r\n  \r\n    },[url]);\r\n  \r\n    const jsx=sound.map(items=>renderPad(items));\r\n  \r\n  \r\n  \r\n  \r\n    return (\r\n      <div id=\"drum-pads\" className={props.bank?'app-pads1':'app-pads2'}>\r\n        {jsx}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default DrumPads;","// renders a toggle button\r\nconst ToggleSwitch =props=>{\r\n    return (\r\n    <div className='tog'>\r\n      <input \r\n        type=\"checkbox\"\r\n        className='tog-check'\r\n        name={props.name}\r\n        id={props.id}\r\n        disabled={props.dis}\r\n        defaultChecked={props.checky}\r\n        onChange={props.handleChange}\r\n      />\r\n      <label\r\n        className='tog-label'\r\n        htmlFor={props.id}>\r\n        <span className=\"tog-inner\"\r\n              datacustattrt={props.tTxt}\r\n              datacustattrf={props.fTxt}/>\r\n        <span className=\"tog-switch\" />\r\n      </label>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  export default ToggleSwitch;\r\n  ","// internal\r\n// components\r\nimport ToggleSwitch from './ToggleSwitch';\r\n\r\n// renders container with two toggles\r\n// one that swaps between two sets of soundbites\r\n// one that turns the drum machine on/off\r\nconst CtrlPad=props=>{\r\n    return (\r\n      <div id=\"ctrl-pad\">\r\n        <ToggleSwitch name=\"powerTog\"\r\n                      id=\"powerSwit\"\r\n                      handleChange={props.handlePower}\r\n                      checky={props.power}\r\n                      tTxt='ON'\r\n                      fTxt='OFF' />\r\n        <ToggleSwitch name=\"bankTog\"\r\n                      id=\"bankSwit\"\r\n                      handleChange={props.handleBank}\r\n                      checky={props.bank}\r\n                      tTxt='&nbsp;&nbsp;1'\r\n                      fTxt='2&nbsp;&nbsp;&nbsp;' />              \r\n      </div>\r\n      \r\n  \r\n    )\r\n  }\r\n\r\n  export default CtrlPad;","// internal\r\n// components\r\nimport Display from './Display';\r\nimport DrumPads from './DrumPads';\r\nimport CtrlPad from './CtrlPad';\r\n\r\n// renders the full drum machine, with on/off, sound library swap, a display of current sound, and the drumpad grid\r\nconst DrumMachine=props=>{\r\n    return (\r\n      <div id=\"drum-machine\">\r\n        <Display curr={props.curr}/>\r\n        <DrumPads handleDisplay={props.handleDisplay} power={props.power} bank={props.bank}/>\r\n        <CtrlPad handlePower={props.handlePower} handleBank={props.handleBank} power={props.power} bank={props.bank}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  \r\n  export default DrumMachine;","// external\r\n// react\r\nimport React, { useState} from 'react';\r\n\r\n// internal\r\n// components\r\nimport DrumMachine from './components/DrumMachine';\r\n\r\n// renders a centered drum machine.\r\nconst App=()=>{\r\n    //app on/off\r\n    const [power, setPower]=useState(true);\r\n    //app audio bank: true = 1, false = 2\r\n    const [bank,setBank]=useState(true);\r\n    //display text\r\n    const [curr, setCurr]=useState('');\r\n    const powerSwitch=e=>{\r\n      setPower(e.target.checked);\r\n      setCurr('');\r\n    }\r\n  \r\n    const bankSwitch=e=>{\r\n      setBank(e.target.checked);\r\n      setCurr('');\r\n    }\r\n  \r\n    const handleDisplay=desc=>{\r\n      setCurr(desc);\r\n    }\r\n    return (\r\n      <div id=\"app\" className={bank?'app-bank1':'app-bank2'}>\r\n        <DrumMachine \r\n          handlePower={powerSwitch} \r\n          handleBank={bankSwitch}\r\n          handleDisplay={handleDisplay}\r\n          power={power}\r\n          bank={bank}\r\n          curr={curr}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default App;","// external \n// react\nimport ReactDOM from 'react-dom';\n\n// internal\n// components\nimport App from './App';\n\n// stylesheets\nimport './index.scss';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}